on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        java-version: [11]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: coursier/cache-action@v6

      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin

      - run: ./millw __.publishArtifacts

      - run: ./millw -k __.test

      - run: ./millw __.scoverage.xmlReport

      - name: Upload scoverage reports to codecov.io
        uses: codecov/codecov-action@v3
        with:
          files: ./out/main/0.10/scoverage/xmlReport.dest/scoverage.xml,./out/main/0.10/worker/scoverage/xmlReport.dest/scoverage.xml,./out/main/0.10/worker/impl/scoverage/xmlReport.dest/scoverage.xml,./out/main/0.11.0-M4/scoverage/xmlReport.dest/scoverage.xml,./out/main/0.11.0-M4/worker/scoverage/xmlReport.dest/scoverage.xml,./out/main/0.11.0-M4/worker/impl/scoverage/xmlReport.dest/scoverage.xml,
        continue-on-error: true

  publish:
    needs: build
    if: github.repository == 'lefou/mill-vaadin' && (startsWith(github.ref, 'refs/tags/') || (github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'))
    runs-on: ubuntu-latest
    concurrency: publish-{{ github.sha }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: coursier/cache-action@v6

      - uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: Setup GPG secrets for publish
        run: |
          gpg --version
          cat <(echo "${{ secrets.GPG_SECRET_KEY }}") | base64 --decode | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Publish to Maven Central
        run: ./millw -i mill.scalalib.PublishModule/publishAll --sonatypeCreds "${{ secrets.SONATYPE_CREDS }}" --gpgArgs "--passphrase=${{ secrets.GPG_SECRET_KEY_PASS}},--batch,--yes,-a,-b,--pinentry-mode,loopback" --publishArtifacts __.publishArtifacts --readTimeout 600000 --awaitTimeout 600000 --release true --signed true
